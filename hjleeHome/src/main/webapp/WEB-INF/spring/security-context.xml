<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<context:component-scan base-package="com.hjlee"/>

	<bean id="userAuthProvider" class="com.hjlee.home.security.CustomAuthenticationProvider"/>
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

	<security:http auto-config="true" use-expressions="true">

	    <security:intercept-url pattern="/board/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/> <!-- 권한별 접근 가능한 url 등록 -->
	    <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
	    <security:intercept-url pattern="/**" access="permitAll"/> <!-- 모든사용자 접근 가능 -->

	    <security:form-login
	        username-parameter="userId"
	        password-parameter="userPwd"
	        login-processing-url="/login"
	        login-page="/login"
	        default-target-url="/"
	    />
		<security:logout
        	logout-url="/logout"
        	logout-success-url="/"
   		 />
		<security:access-denied-handler error-page="/access_denied_page"/>
	</security:http>

	<!-- custom AuthenticationProvider-->
	<security:authentication-manager>
	    <security:authentication-provider ref="userAuthProvider"/>
	</security:authentication-manager>

	<!-- 인메모리인증 -->
<!-- 	<security:authentication-manager>
	    <security:authentication-provider>
	        <security:user-service >
	            <security:user name="user"  password="1234"  authorities="ROLE_USER" />
	            <security:user name="admin"  password="1234"  authorities="ROLE_ADMIN" />
	        </security:user-service>
	    </security:authentication-provider>
	</security:authentication-manager> -->

	<!-- 임의 테이블을 이용한 인증 -->
<!-- 	<security:authentication-manager>
	    <security:authentication-provider>
	    	<security:jdbc-user-service data-source-ref="dataSource"
	    		users-by-username-query="SELECT USER_ID as userId, USER_PASSWORD as userPwd, ENABLED FROM USER_TB WHERE USER_ID=?"
	    		authorities-by-username-query="SELECT USER_ID as userId, AUTHORITY FROM USER_TB WHERE USER_ID=?"
	    	/>
	    </security:authentication-provider>
	</security:authentication-manager> -->

</beans>